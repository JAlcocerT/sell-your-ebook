#https://github.com/JAlcocerT/Docker/tree/main/Web/SSGs/Astro

services:
  # Flask CMS (Markdown editor with PB auth)
  flask-cms:
    build:
      context: .
      dockerfile: Dockerfile.flask
    image: flask-cms
    container_name: flask-cms
    ports:
      - "5050:5050"
    environment:
      - CONTENT_DIR=/app/src/content
      - PB_URL=http://pocketbase:8080
      - SECRET_KEY=change-me #openssl rand -base64 12 #for secrets
    volumes:
      - ./src/content:/app/src/content
    command: ["sh", "-lc", "uv run gunicorn app:app -b 0.0.0.0:5050 --workers 2 --threads 4 --timeout 60"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:5050/api/list"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - project-moritaweb
      #- cloudflared_tunnel

  # PocketBase (BaaS)
  pocketbase:
    build:
      context: .
      dockerfile: Dockerfile.pb
    image: pb
    container_name: pocketbase
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./pocketbase-data:/pb/pb_data
    environment:
      - PB_ADMIN_EMAIL=you@example.com
      - PB_ADMIN_PASSWORD=change-me-strong
    networks:
      - project-moritaweb

  # Astro Development Server
  astro-dev:
    image: node:22.16-alpine3.22
    container_name: astro-dev
    working_dir: /app
    ports:
      - "4321:4321"  # Astro dev server with live changes port - Go to http://localhost:4324/
    volumes:
      - ./:/app #this is a common volume for Codex container to place the .md post
    command: sh -c "cd /app && npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - NODE_ENV=development
    networks:
      - project-moritaweb
    tty: true
    restart: "no"

  astro-prod:
    image: node:22.16-alpine3.22
    container_name: astro-prod
    working_dir: /app
    volumes:
      - ./:/app #this is a common volume for Codex container to place the .md post
    ports:
      - "8099:4321"  # Changed to match Astro's default port
    command: >
      sh -c "cd /app && 
      npm install && 
      npm run build && 
      npx http-server ./dist -p 4321"
     #check 2 commands for same container (?) 
    environment:
      - NODE_ENV=production
    networks:
      - project-moritaweb
    restart: "no"

networks:
  project-moritaweb:
    driver: bridge
  # cloudflared_tunnel:
  #   external: true